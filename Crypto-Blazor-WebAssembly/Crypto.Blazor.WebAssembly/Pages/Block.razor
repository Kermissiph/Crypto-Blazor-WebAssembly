@page "/block"

<div class="container">
    <div class="row">
        <h1>Block</h1>
    </div>
    <div class="row">
        <div class="col-2">
            <label>Block Number: </label>
        </div>
        <div class="col-4"
            <input @bind-value="@_blockNumber" @bind-value:event="oninput"/>
        </div>
    </div>
    <div class="row">
        <div class="col-2">
            <label>Nonce: </label>
        </div>
        <div class="col-4"
            <input @bind-value="@_nonce" @bind-value:event="oninput"/>
        </div>

    </div>
    <div class="row">
        <div class="col-2">
            <label>Data: </label>
        </div>
        <div class="col-4">
            <textarea cols="30" rows="10" @bind-value="@_data" @bind-value:event="oninput"/>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <label>Hash: </label>
            <p>@CalculateHash.SHA256HashFunction(_blockNumber+_nonce+_data)</p>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <button class="btn btn-primary" @onclick="Mine">
                Mine!
            </button>
        </div>
    </div>
</div>

@code {
    private string _blockNumber = "1";
    private string _nonce = "12401";
    private string _data = string.Empty;
    private string _hash;

    protected override Task OnInitializedAsync()
    {
        _hash = CalculateHash.SHA256HashFunction(_blockNumber + _nonce + _data);
        return base.OnInitializedAsync();
    }

    private void Mine()
    {
        int nonce = 0;
        string hash = string.Empty;

        while (true)
        {
            hash = CalculateHash.SHA256HashFunction(_blockNumber + nonce + _data);
            if (hash.StartsWith("0000"))
            {
                _hash = hash;
                _nonce = nonce.ToString();
                break;
            }
            nonce++;
        }
    }
}